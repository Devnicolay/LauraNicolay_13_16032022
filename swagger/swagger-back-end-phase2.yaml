swagger: "2.0"
info:
  description: "API model proposal for user transactions"
  version: "2.0.0"
  title: "Argent Bank transation"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "nicolaylaura@gmail.com"
host: "localhost:3001"
basePath: "/api/v2"
schemes:
- "http"
paths:
  /transactions:
    get:
      tags:
      - "transactions module"
      summary: "display transaction for the current month"
      description: ""
      operationId: "viewTransaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authorization"
        description: "Attach Bearer JWT token"
        required: true
        type: "string"
      responses:
        "200":
          description: "User account retrieved successully"
          schema:
            $ref: "#/definitions/schemaDisplayAccounts"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    post:
      tags:
      - "transactions module"
      summary: "Add a transaction"
      description: ""
      operationId: "addTransactionId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authorization"
        description: "Attach Bearer JWT token"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Transaction object that needs to be added transaction"
        required: true
        schema:
            $ref: "#/definitions/schemaTransactionDetail"
      responses:
        "200":
          description: "Transaction added successully"
          schema:
            $ref: "#/definitions/schemaDisplayAccounts"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/{idTransaction}:
    get:
      tags:
      - "transactions module"
      summary: "display a transaction"
      description: ""
      operationId: "transactionId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authorization"
        description: "Attach Bearer JWT token"
        required: true
        type: "string"
      - in: "path"
        name: "idTransaction"
        description: "Id of the transaction"
        required: true
        type: "string"
      responses:
        "200":
          description: "Detail of transaction retrieved successully"
          schema:
            $ref: "#/definitions/schemaTransactionDetail"
        "400":
          description: Invalid Fields
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      tags:
      - "transactions module"
      summary: "Edit a transaction"
      description: ""
      operationId: "editTransactionId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authorization"
        description: "Attach Bearer JWT token"
        required: true
        type: "string"
      - in: "path"
        name: "idTransaction"
        description: "Id of the transaction that needs to be edited"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Edit transaction"
        required: true
        schema:
            $ref: "#/definitions/schemaTransactionEdit"
      responses:
        "200":
          description: "Transaction edited successully"
          schema:
            $ref: "#/definitions/schemaTransactionDetail"
        "400":
          description: Invalid ID supplied
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - "transactions module"
      summary: "Delete a transaction"
      description: ""
      operationId: "deleteTransactionId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authorization"
        description: "Attach Bearer JWT token"
        required: true
        type: "string"
      - in: "path"
        name: "idTransaction"
        description: "Id of the transaction that needs to be deleted"
        required: true
        type: "string"
      responses:
        "202":
          description: "Transaction deleted successully"
        "400":
          description: Invalid Fields
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
          

definitions:          
  schemaDisplayAccounts:
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          account1:
            type: object
            properties:
              accountId:
                type: string
                description: account bank checking
              balance:
                type: number
                description: account balance
              note:
                type: string
                description: account bank notes (user can add note)
              category:
                type: string
                description: account bank category (user can add category)
          account2:
            type: object
            properties:
              accountId:
                type: string
                description: account bank checking
              balance:
                type: number
                description: account balance
              note:
                type: string
                description: account bank notes (user can add note)
              category:
                type: string
                description: account bank category (user can add category)
                
  schemaAddTransaction:
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          account1:
            type: object
            properties:
              accountId:
                type: string
                description: account bank checking
              balance:
                type: number
                description: account balance
              category:
                type: string
                description: account bank category
              notes:
                type: string
                description: account bank notes
                
  schemaTransactionId:
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          account1:
            type: object
            properties:
              accountId:
                type: string
                description: account bank checking
              balance:
                type: number
                description: account balance
          account2:
            type: object
            properties:
              accountId:
                type: string
                description: account bank checking
              balance:
                type: number
                description: account balance
                
  schemaTransactionDetail:
        properties:
          account1:
            type: object
            properties:
              accountId:
                type: string
                description: account bank checking
              balance:
                type: number
                description: account balance
              note:
                type: string
                description: account bank notes (user can add note)
              category:
                type: string
                description: account bank category (user can add category)
                
  schemaTransactionEdit:
    properties:
      category:
        type: string
        description: transaction category
      notes:
        type: string
        description: transaction notes
      